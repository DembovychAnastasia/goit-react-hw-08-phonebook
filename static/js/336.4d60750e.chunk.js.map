{"version":3,"file":"static/js/336.4d60750e.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContacttList.jsx","components/FilterContact/FilterContact.styled.jsx","components/FilterContact/FilterContact.jsx","components/FormContact/FormContact.styled.jsx","components/FormContact/FormContact.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContactsFilter = state => state.filters.filter;","import styled from 'styled-components';\n\nexport const ContForm = styled.div`\n  h1,\n  h2 {\n    margin-top: 15px;\n    text-align: center;\n    font-size: 28px;\n    color:#f50057;\n    text-shadow: rgba(255, 255, 255, 0.1) -1px -1px 1px,\n      rgba(0, 0, 0, 0.5) 1px 1px 1px;\n  }\n`;\n\nexport const ContactsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 0px;\n  margin: 0px;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  -webkit-box-pack: justify;\n  justify-content: space-between;\n  -webkit-box-align: center;\n  align-items: center;\n  width: 100%;\n  padding: 0px 0px 0px 20px;\n  margin-bottom: 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 0px 10px;\n  transition: all 0.5s ease 0s;\n`;\n\nexport const ContactIcon = styled.div`\n  margin-right: 15px;\n  border-radius: 4px;\n  width: 27px;\n  height: 27px;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n\n  svg {\n    color: #f50057;\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const ContactText = styled.p`\n  font-size: 18px;\n`;\n\nexport const ContactDelete = styled.button`\n  display: inline-block;\n  padding: 10px 12px;\n  margin: 0px 10px;\n  border: none;\n  /* border-radius: 50%; */\n  color: #f50057;\n    background-color: transparent;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.2;\n  letter-spacing: 0.03em;\n  text-transform: uppercase;\n  cursor: pointer;\n\n  transition: all 0.3s ease 0s;\n  /* box-shadow: rgba(0, 0, 0, 0.5) 0px 2px 5px; */\n\n  &:hover,\n  &:focus {\n    background-color: #c51162;\n    color: #fff;\n  }\n\n  &:active {\n    scale: 0.95;\n  }\n`;","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectContactsFilter,\n} from '../../redux/contacts/selectors';\nimport { IoPersonOutline } from 'react-icons/io5';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport {\n  ContactsList,\n  ContactItem,\n  ContactIcon,\n  ContactText,\n  ContactDelete,\n} from './ContactList.styled';\n\n// компонент використовую список контактів з стору через useSelector\nexport function ContactList() {\n  const contacts = useSelector(selectContacts);\n\n  const filterValue = useSelector(selectContactsFilter).toLowerCase();\n\n  // надсилання екшона видалення контакту за допомогою useDispatch\n  const dispatch = useDispatch();\n\n  const handleDelete = evt => {\n    dispatch(deleteContact(evt.currentTarget.id));\n  };\n\n  const getVisibilityContacts = () => {\n    if (!filterValue || filterValue === '') {\n      return contacts;\n    }\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue)\n    );\n  };\n\n  const visibilityContacts = getVisibilityContacts();\n\n  return (\n    <ContactsList>\n      {visibilityContacts.map(contact => (\n        <ContactItem key={contact.id}>\n          <ContactIcon>\n            <IoPersonOutline />\n          </ContactIcon>\n          <ContactText>\n            {contact.name}: <span>{contact.number}</span>\n          </ContactText>\n          <ContactDelete type=\"button\" id={contact.id} onClick={handleDelete}>\n            <FaTrashAlt />\n          </ContactDelete>\n        </ContactItem>\n      ))}\n    </ContactsList>\n  );\n}","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 0;\n  margin: 0;\n  margin-bottom: 10px;\n  font-size: 22px;\n  justify-Content: center;\n  /* align-content: center; */\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #fff;\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 0px 10px;\n  transition: 0.5s;\n  outline: none;\n  &:hover,\n  &:focus {\n    background-color: #fff;\n    color: #000000;\n  }\n  \n  \n`;","import { Label, Input } from './FilterContact.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilterContacts } from 'redux/contacts/filterSlice';\n\n\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        // value={filter}\n        // onChange={event => dispatch(setFilter(event.target.value.trim()))}\n        onChange={event =>\n          dispatch(setFilterContacts(event.target.value.trim()))\n        }\n      />\n    </Label>\n  );\n};","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  max-width: 540px;\n`;\n\nexport const Form = styled.form`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  /* display: flex; */\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n\n  label {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    width: 100%;\n    padding: 0px;\n    /* margin: 0px 0px 10px; */\n  }\n\n  input {\n    width: 100%;\n    padding: 10px;\n    margin-bottom: 10px;\n    border: none;\n    border-radius: 5px;\n    background-color: rgb(255, 255, 255);\n    box-shadow: rgba(0, 0, 0, 0.4) 0px 0px 10px;\n    transition: all 0.5s ease 0s;\n    outline: none;\n  }\n`;\n\nexport const FormList = styled.ul`\n  padding: 0;\n  /* display: flex; */\n`;\n\nexport const FormListItem = styled.li`\n  margin-right: 10px;\n  p {\n    margin-bottom: 8px;\n    font-size: 18px;\n  }\n`;\n\nexport const FormButton = styled.button`\n  display: block;\n  padding: 10px 20px;\n  margin: 0px auto;\n  border: none;\n  border-radius: 5px;\n  color: #fff;\n    background-color: #f50057;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.2;\n  letter-spacing: 0.03em;\n  text-transform: uppercase;\n  cursor: pointer;\n  transition: all 0.3s ease 0s;\n  box-shadow: rgba(0, 0, 0, 0.5) 0px 0px 10px;\n  margin-top: 20px;\n\n  &:hover,\n  &:focus {\n    background-color: #c51162;\n    color: #fff;\n    cursor: pointer;\n  }\n\n  svg {\n    margin-right: 10px;\n    width: 18px;\n    height: 18px;\n  }\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { toast } from 'react-hot-toast';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { IoPersonAdd } from 'react-icons/io5';\nimport { Form, FormList, FormListItem, FormButton } from './FormContact.styled';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  function handlerSubmit(evt) {\n    evt.preventDefault();\n    const form = evt.target;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return toast.error(`${name} is alredy in contacts.`);\n    }\n\n    dispatch(addContact({ name, number }));\n\n    form.reset();\n  }\n\n  return (\n    <Form onSubmit={handlerSubmit}>\n      <FormList>\n        <FormListItem>\n          <p>Name</p>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </FormListItem>\n        <FormListItem>\n          <p>Contact</p>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </FormListItem>\n      </FormList>\n\n      <FormButton type=\"submit\">\n        <IoPersonAdd />\n        Add contact\n      </FormButton>\n    </Form>\n  );\n};\n\nexport default ContactForm;","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { Dna } from 'react-loader-spinner';\n\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { ContactList} from 'components/ContactList/ContacttList';\nimport { Filter } from 'components/FilterContact/FilterContact';\nimport ContactForm from 'components/FormContact/FormContact';\nimport { selectIsLoading, selectError } from '../redux/contacts/selectors';\nimport { ContForm } from 'components/ContactList/ContactList.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContForm>\n      <h1>Your phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && (\n        <Dna\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"dna-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"dna-wrapper\"\n        />\n      )}\n      <ContactList />\n    </ContForm>\n  );\n};\n\nexport default Contacts;"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filters","filter","ContForm","styled","ContactsList","ContactItem","ContactIcon","ContactText","ContactDelete","ContactList","useSelector","filterValue","toLowerCase","dispatch","useDispatch","handleDelete","evt","deleteContact","currentTarget","id","visibilityContacts","contact","name","includes","map","number","type","onClick","Label","Input","Filter","onChange","event","setFilterContacts","target","value","trim","Form","FormList","FormListItem","FormButton","onSubmit","preventDefault","form","find","toast","addContact","reset","pattern","title","required","useEffect","fetchContacts","visible","height","width","ariaLabel","wrapperStyle","wrapperClass"],"sourceRoot":""}